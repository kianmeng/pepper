map normal <esc> CDCVs<esc>
map normal <c-c> CDCVs<esc>

map normal . Qa

map normal I dgii
map normal <c-i> dgli
map normal <tab> dgli
map normal ci cvcCglccgii
map normal o dgli<enter>
map normal O dgii<enter><up>
map normal J djgivkgli<space><esc>

map normal ! :<space>-spawn<enter>
map normal | :<space>-replace-with-output<enter>

map normal <space>o :<space>-find-file<enter>
map normal <space>f :<space>-find-pattern<enter>

set-register c "//"

command h @{ help @arg(*) }
command q @{ quit@arg(!) }
command qa @{ quit-all@arg(!) }
command o @{ open @arg(*) }
command s @{ save @arg(*) }
command sa @{ save-all }
command r @{ reopen@arg(!) }
command ra @{ reopen-all@arg(!) }
command c @{ close@arg(!) }
command ca @{ close-all@arg(!) }

command -spawn @{
    set-register p "spawn:"
    readline @{
        spawn "@register(i)"
    }
}
command -replace-with-output @{
    set-register p "replace-with-output:"
    readline @{
        replace-with-output "@register(i)"
    }
}

if @platform() == windows @{
    command -find-file @{
        picker-entries-from-lines "cmd /c dir /a-d /s /b"
        set-register p "open:"
        pick @{
            open "@picker-entry()"
        }
    }
    command -find-pattern @{
        set-register p "find:"
        readline @{
            open scratch "@register(i).refs"
            enqueue-keys aad
            replace-with-output 'findstr /s /r /p /n "/c:@register(i)" *'
        }
    }
}

if @platform() == linux @{
    copy-command "xclip -selection clipboard -in"
    paste-command "xclip -selection clipboard -out"

    command -find-file @{
        picker-entries-from-lines "find . -type f -printf '%P\\n'"
        set-register p "open:"
        pick @{
            open "@picker-entry()"
        }
    }
    command -find-pattern @{
        set-register p "find:"
        readline @{
            open scratch "@register(i).refs"
            enqueue-keys aad
            replace-with-output 'grep --recursive --binary-files=without-match --with-filename --line-number "@register(i)"'
        }
    }
}

if @platform() == bsd @{
    copy-command "xclip -in"
    paste-command "xclip -out"

    command -find-file @{
        picker-entries-from-lines "find . -type f -printf '%P\\n'"
        set-register p "open:"
        pick @{
            open "@picker-entry()"
        }
    }
    command -find-pattern @{
        set-register p "find:"
        readline @{
            open scratch "@register(i).refs"
            enqueue-keys aad
            replace-with-output 'grep --recursive --binary-files=without-match --with-filename --line-number "@register(i)"'
        }
    }
}

if @platform() == macos @{
    copy-command "pbcopy"
    paste-command "pbpaste"

    command -find-file @{
        picker-entries-from-lines "find . -type f -print"
        set-register p "open:"
        pick @{
            open "@picker-entry()"
        }
    }
    command -find-pattern @{
        set-register p "find:"
        readline @{
            open scratch "@register(i).refs"
            enqueue-keys aad
            replace-with-output 'grep --recursive --binary-files=without-match --with-filename --line-number "@register(i)"'
        }
    }
}

